{"ast":null,"code":"import React,{useContext,useState,useEffect,useRef}from\"react\";import{useHistory}from\"react-router-dom\";import{Can}from\"../Can\";import{makeStyles}from\"@material-ui/core/styles\";import{IconButton}from\"@material-ui/core\";import{DeviceHubOutlined,History,PictureAsPdf,Replay,SwapHorizOutlined}from\"@material-ui/icons\";import{v4 as uuidv4}from\"uuid\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";// import TicketOptionsMenu from \"../TicketOptionsMenu\";\nimport ButtonWithSpinner from\"../ButtonWithSpinner\";import toastError from\"../../errors/toastError\";import usePlans from\"../../hooks/usePlans\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";import Tooltip from'@material-ui/core/Tooltip';import ConfirmationModal from\"../ConfirmationModal\";import*as Yup from\"yup\";import{Formik,Form}from\"formik\";import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import TransferTicketModalCustom from\"../TransferTicketModalCustom\";import AcceptTicketWithouSelectQueue from\"../AcceptTicketWithoutQueueModal\";//icones\nimport EventIcon from\"@material-ui/icons/Event\";import HighlightOffIcon from\"@material-ui/icons/HighlightOff\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import UndoIcon from'@material-ui/icons/Undo';import ScheduleModal from\"../ScheduleModal\";import MenuItem from\"@material-ui/core/MenuItem\";import{Switch}from\"@material-ui/core\";import ShowTicketOpen from\"../ShowTicketOpenModal\";import{toast}from\"react-toastify\";import useCompanySettings from\"../../hooks/useSettings/companySettings\";import ShowTicketLogModal from\"../../components/ShowTicketLogModal\";import TicketMessagesDialog from\"../TicketMessagesDialog\";const useStyles=makeStyles(theme=>({actionButtons:{marginRight:6,maxWidth:\"100%\",flex:\"none\",alignSelf:\"center\",marginLeft:\"auto\",// flexBasis: \"50%\",\ndisplay:\"flex\",\"& > *\":{margin:theme.spacing(1)}},bottomButtonVisibilityIcon:{padding:1,color:theme.mode===\"light\"?'#0872b9':'#FFF'},botoes:{display:\"flex\",padding:\"15px\",justifyContent:\"flex-end\",maxWidth:\"100%\"// alignItems: \"center\"\n}}));const SessionSchema=Yup.object().shape({ratingId:Yup.string().required(\"Avaliação obrigatória\")});const TicketActionButtonsCustom=_ref=>{let{ticket// , showSelectMessageCheckbox,\n// selectedMessages,\n// forwardMessageModalOpen,\n// setForwardMessageModalOpen\n}=_ref;const classes=useStyles();const history=useHistory();const isMounted=useRef(true);const[loading,setLoading]=useState(false);const{user}=useContext(AuthContext);const{setCurrentTicket}=useContext(TicketsContext);const[open,setOpen]=React.useState(false);const formRef=React.useRef(null);const[confirmationOpen,setConfirmationOpen]=useState(false);const[transferTicketModalOpen,setTransferTicketModalOpen]=useState(false);const[scheduleModalOpen,setScheduleModalOpen]=useState(false);const[contactId,setContactId]=useState(null);const[acceptAudioMessage,setAcceptAudio]=useState(ticket.contact.acceptAudioMessage);const[acceptTicketWithouSelectQueueOpen,setAcceptTicketWithouSelectQueueOpen]=useState(false);const[showTicketLogOpen,setShowTicketLogOpen]=useState(false);const[openTicketMessageDialog,setOpenTicketMessageDialog]=useState(false);const[showSchedules,setShowSchedules]=useState(false);const[enableIntegration,setEnableIntegration]=useState(ticket.useIntegration);const[openAlert,setOpenAlert]=useState(false);const[userTicketOpen,setUserTicketOpen]=useState(\"\");const[queueTicketOpen,setQueueTicketOpen]=useState(\"\");const[logTicket,setLogTicket]=useState([]);const{get:getSetting}=useCompanySettings();const{getPlanCompany}=usePlans();useEffect(()=>{async function fetchData(){const companyId=user.companyId;const planConfigs=await getPlanCompany(undefined,companyId);setShowSchedules(planConfigs.plan.useSchedules);setOpenTicketMessageDialog(false);}fetchData();setShowTicketLogOpen(false);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const handleClickOpen=async e=>{const setting=await getSetting({\"column\":\"requiredTag\"});if((setting===null||setting===void 0?void 0:setting.requiredTag)===\"enabled\"){//verificar se tem uma tag   \ntry{const contactTags=await api.get(\"/contactTags/\".concat(ticket.contact.id));if(!contactTags.data.tags){toast.warning(i18n.t(\"messagesList.header.buttons.requiredTag\"));}else{setOpen(true);// handleUpdateTicketStatus(e, \"closed\", user?.id);\n}}catch(err){toastError(err);}}else{setOpen(true);// handleUpdateTicketStatus(e, \"closed\", user?.id);\n}};const handleClose=()=>{formRef.current.resetForm();setOpen(false);};const handleCloseAlert=()=>{setOpenAlert(false);setLoading(false);};const handleOpenAcceptTicketWithouSelectQueue=async()=>{setAcceptTicketWithouSelectQueueOpen(true);};const handleOpenScheduleModal=()=>{if(typeof handleClose==\"function\")handleClose();setContactId(ticket.contact.id);setScheduleModalOpen(true);};const handleCloseScheduleModal=()=>{setScheduleModalOpen(false);setContactId(null);};const handleOpenTransferModal=e=>{setTransferTicketModalOpen(true);if(typeof handleClose==\"function\")handleClose();};const handleOpenConfirmationModal=e=>{setConfirmationOpen(true);if(typeof handleClose==\"function\")handleClose();};const handleCloseTicketWithoutFarewellMsg=async()=>{setLoading(true);try{await api.put(\"/tickets/\".concat(ticket.id),{status:\"closed\",userId:(user===null||user===void 0?void 0:user.id)||null,sendFarewellMessage:false,amountUsedBotQueues:0});setLoading(false);history.push(\"/tickets\");}catch(err){setLoading(false);toastError(err);}};const handleEnableIntegration=async()=>{setLoading(true);try{await api.put(\"/tickets/\".concat(ticket.id),{useIntegration:!enableIntegration});setEnableIntegration(!enableIntegration);setLoading(false);}catch(err){setLoading(false);toastError(err);}};const handleShowLogTicket=async()=>{setLoading(true);try{const{data}=await api.get(\"/tickets-log/\".concat(ticket.id));setLogTicket(data);setShowTicketLogOpen(true);setLoading(false);}catch(err){setLoading(false);toastError(err);}};const handleContactToggleAcceptAudio=async()=>{try{const contact=await api.put(\"/contacts/toggleAcceptAudio/\".concat(ticket.contact.id));setAcceptAudio(contact.data.acceptAudioMessage);}catch(err){toastError(err);}};const handleCloseTransferTicketModal=()=>{if(isMounted.current){setTransferTicketModalOpen(false);}};const handleDeleteTicket=async()=>{try{await api.delete(\"/tickets/\".concat(ticket.id));history.push(\"/tickets\");}catch(err){toastError(err);}};const handleSendMessage=async id=>{const msg=\"{{ms}} *{{name}}*, \".concat(i18n.t(\"mainDrawer.appBar.user.myName\"),\" *\").concat(user===null||user===void 0?void 0:user.name,\"* \").concat(i18n.t(\"mainDrawer.appBar.user.continuity\"),\".\");const message={read:1,fromMe:true,mediaUrl:\"\",body:\"*\".concat(i18n.t(\"mainDrawer.appBar.user.virtualAssistant\"),\":*\\n\").concat(msg.trim())};try{await api.post(\"/messages/\".concat(id),message);}catch(err){toastError(err);}};const handleSelectTicket=ticket=>{const code=uuidv4();const{id,uuid}=ticket;setCurrentTicket({id,uuid,code});};const handleUpdateTicketStatus=async(e,status,userId)=>{setLoading(true);try{var _setting,_ticket$whatsapp;await api.put(\"/tickets/\".concat(ticket.id),{status:status,userId:userId||null});let setting;try{setting=await getSetting({\"column\":\"sendGreetingAccepted\"});}catch(err){toastError(err);}if(((_setting=setting)===null||_setting===void 0?void 0:_setting.sendGreetingAccepted)===\"enabled\"&&(!ticket.isGroup||((_ticket$whatsapp=ticket.whatsapp)===null||_ticket$whatsapp===void 0?void 0:_ticket$whatsapp.groupAsTicket)===\"enabled\")&&ticket.status===\"pending\"){handleSendMessage(ticket.id);}setLoading(false);if(status===\"open\"||status===\"group\"){setCurrentTicket({...ticket,code:\"#\"+status});handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}else{setCurrentTicket({id:null,code:null});history.push(\"/tickets\");}}catch(err){setLoading(false);toastError(err);}};const handleAcepptTicket=async id=>{setLoading(true);try{const otherTicket=await api.put(\"/tickets/\".concat(id),{status:ticket.isGroup?\"group\":\"open\",userId:user===null||user===void 0?void 0:user.id});if(otherTicket.data.id!==ticket.id){if(otherTicket.data.userId!==(user===null||user===void 0?void 0:user.id)){setOpenAlert(true);setUserTicketOpen(otherTicket.data.user.name);setQueueTicketOpen(otherTicket.data.queue.name);}else{setLoading(false);handleSelectTicket(otherTicket.data);history.push(\"/tickets/\".concat(otherTicket.data.uuid));}}else{if(isMounted.current){setLoading(false);}handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}}catch(err){setLoading(false);toastError(err);}};return/*#__PURE__*/React.createElement(React.Fragment,null,openAlert&&/*#__PURE__*/React.createElement(ShowTicketOpen,{isOpen:openAlert,handleClose:handleCloseAlert,user:userTicketOpen,queue:queueTicketOpen}),acceptTicketWithouSelectQueueOpen&&/*#__PURE__*/React.createElement(AcceptTicketWithouSelectQueue,{modalOpen:acceptTicketWithouSelectQueueOpen,onClose:e=>setAcceptTicketWithouSelectQueueOpen(false),ticketId:ticket.id,ticket:ticket}),showTicketLogOpen&&/*#__PURE__*/React.createElement(ShowTicketLogModal,{isOpen:showTicketLogOpen,handleClose:e=>setShowTicketLogOpen(false),logs:logTicket}),openTicketMessageDialog&&/*#__PURE__*/React.createElement(TicketMessagesDialog,{open:openTicketMessageDialog,handleClose:()=>setOpenTicketMessageDialog(false),ticketId:ticket.id}),/*#__PURE__*/React.createElement(\"div\",{className:classes.actionButtons},/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon,onClick:()=>setOpenTicketMessageDialog(true)},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"ticketsList.buttons.exportAsPDF\")},/*#__PURE__*/React.createElement(PictureAsPdf,null))),ticket.status===\"closed\"&&(ticket.queueId===null||ticket.queueId===undefined)&&/*#__PURE__*/React.createElement(ButtonWithSpinner,{loading:loading,startIcon:/*#__PURE__*/React.createElement(Replay,null),size:\"small\",onClick:e=>handleOpenAcceptTicketWithouSelectQueue()},i18n.t(\"messagesList.header.buttons.reopen\")),ticket.status===\"closed\"&&ticket.queueId!==null&&/*#__PURE__*/React.createElement(ButtonWithSpinner,{startIcon:/*#__PURE__*/React.createElement(Replay,null),loading:loading,onClick:e=>handleAcepptTicket(ticket.id)},i18n.t(\"messagesList.header.buttons.reopen\")),/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon,onClick:handleShowLogTicket},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"messagesList.header.buttons.logTicket\")},/*#__PURE__*/React.createElement(History,null))),(ticket.status===\"open\"||ticket.status===\"group\")&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon,onClick:handleEnableIntegration},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"messagesList.header.buttons.enableIntegration\")},enableIntegration===true?/*#__PURE__*/React.createElement(DeviceHubOutlined,{style:{color:\"green\"}}):/*#__PURE__*/React.createElement(DeviceHubOutlined,null))),/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"messagesList.header.buttons.resolve\")},/*#__PURE__*/React.createElement(HighlightOffIcon// color=\"primary\"\n,{onClick:handleClickOpen}))),/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"tickets.buttons.returnQueue\")},/*#__PURE__*/React.createElement(UndoIcon// color=\"primary\"\n,{onClick:e=>handleUpdateTicketStatus(e,\"pending\",null)}))),/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:\"Transferir Ticket\"},/*#__PURE__*/React.createElement(SwapHorizOutlined// color=\"primary\"\n,{onClick:handleOpenTransferModal})))),showSchedules&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"tickets.buttons.scredule\")},/*#__PURE__*/React.createElement(EventIcon// color=\"primary\"\n,{onClick:handleOpenScheduleModal})))),/*#__PURE__*/React.createElement(MenuItem,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"ticketOptionsMenu.acceptAudioMessage\")},/*#__PURE__*/React.createElement(Switch,{size:\"small\"// color=\"primary\"\n,checked:acceptAudioMessage,onChange:()=>handleContactToggleAcceptAudio()}))),/*#__PURE__*/React.createElement(Can,{role:user.profile,perform:\"ticket-options:deleteTicket\",yes:()=>/*#__PURE__*/React.createElement(IconButton,{className:classes.bottomButtonVisibilityIcon},/*#__PURE__*/React.createElement(Tooltip,{title:i18n.t(\"tickets.buttons.deleteTicket\")},/*#__PURE__*/React.createElement(DeleteOutlineIcon// color=\"primary\"\n,{onClick:handleOpenConfirmationModal})))}),confirmationOpen&&/*#__PURE__*/React.createElement(ConfirmationModal,{title:\"\".concat(i18n.t(\"ticketOptionsMenu.confirmationModal.title\"),\" #\").concat(ticket.id,\"?\"),open:confirmationOpen,onClose:setConfirmationOpen,onConfirm:handleDeleteTicket},i18n.t(\"ticketOptionsMenu.confirmationModal.message\")),transferTicketModalOpen&&/*#__PURE__*/React.createElement(TransferTicketModalCustom,{modalOpen:transferTicketModalOpen,onClose:handleCloseTransferTicketModal,ticketid:ticket.id,ticket:ticket}),scheduleModalOpen&&/*#__PURE__*/React.createElement(ScheduleModal,{open:scheduleModalOpen,onClose:handleCloseScheduleModal,\"aria-labelledby\":\"form-dialog-title\",contactId:contactId})),ticket.status===\"pending\"&&(ticket.queueId===null||ticket.queueId===undefined)&&/*#__PURE__*/React.createElement(ButtonWithSpinner,{loading:loading,size:\"small\",variant:\"contained\",onClick:e=>handleOpenAcceptTicketWithouSelectQueue()},i18n.t(\"messagesList.header.buttons.accept\")),ticket.status===\"pending\"&&ticket.queueId!==null&&/*#__PURE__*/React.createElement(ButtonWithSpinner,{loading:loading,size:\"small\",variant:\"contained\"// color=\"primary\"\n,onClick:e=>handleUpdateTicketStatus(e,\"open\",user===null||user===void 0?void 0:user.id)},i18n.t(\"messagesList.header.buttons.accept\"))),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,validationSchema:SessionSchema,innerRef:formRef,onSubmit:(values,actions)=>{setTimeout(()=>{actions.setSubmitting(false);actions.resetForm();},400);}},_ref2=>{let{values,touched,errors,isSubmitting,setFieldValue,resetForm}=_ref2;return/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(DialogActions,{className:classes.botoes},/*#__PURE__*/React.createElement(Button,{onClick:e=>handleCloseTicketWithoutFarewellMsg(),style:{background:\"#065183\",color:\"white\"}},i18n.t(\"messagesList.header.dialogRatingWithoutFarewellMsg\")),/*#__PURE__*/React.createElement(Button,{onClick:e=>{var _ticket$queue;return handleUpdateTicketStatus(e,\"closed\",user===null||user===void 0?void 0:user.id,ticket===null||ticket===void 0?void 0:(_ticket$queue=ticket.queue)===null||_ticket$queue===void 0?void 0:_ticket$queue.id);},style:{background:\"#065183\",color:\"white\"}},i18n.t(\"messagesList.header.dialogRatingCancel\")))));})));};export default TicketActionButtonsCustom;","map":null,"metadata":{},"sourceType":"module"}