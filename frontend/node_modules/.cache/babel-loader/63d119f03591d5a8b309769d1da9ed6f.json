{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import{useHistory}from\"react-router-dom\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";import Avatar from\"@material-ui/core/Avatar\";import Typography from\"@material-ui/core/Typography\";import Grid from\"@material-ui/core/Grid\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{v4 as uuidv4}from\"uuid\";import{Button,Divider}from\"@material-ui/core\";import{isNil}from'lodash';import ShowTicketOpen from'../ShowTicketOpenModal';import{TicketsContext}from'../../context/Tickets/TicketsContext';const VcardPreview=_ref=>{let{contact,numbers,queueId,whatsappId}=_ref;const history=useHistory();const{user}=useContext(AuthContext);const companyId=user.companyId;const[openAlert,setOpenAlert]=useState(false);const[userTicketOpen,setUserTicketOpen]=useState(\"\");const[queueTicketOpen,setQueueTicketOpen]=useState(\"\");const{setCurrentTicket}=useContext(TicketsContext);const[selectedContact,setContact]=useState({id:0,name:\"\",number:0,profilePicUrl:\"\"});// useEffect(() => {\n//     const delayDebounceFn = setTimeout(() => {\n//         const fetchContacts = async () => {\n//             try {\n//                 const number = numbers.replace(/\\D/g, \"\");\n//                 const { data } = await api.get(`/contacts/profile/${number}`);\n//                 let obj = {\n//                     id: data.contactId,\n//                     name: contact,\n//                     number: numbers,\n//                     profilePicUrl: data.profilePicUrl\n//                 }\n//                 setContact(obj)\n//             } catch (err) {\n//                 console.log(err)\n//                 toastError(err);\n//             }\n//         };\n//         fetchContacts();\n//     }, 500);\n//     return () => clearTimeout(delayDebounceFn);\n// }, [contact, numbers]);\nconst handleSelectTicket=ticket=>{const code=uuidv4();const{id,uuid}=ticket;setCurrentTicket({id,uuid,code});};useEffect(()=>{const delayDebounceFn=setTimeout(()=>{const fetchContacts=async()=>{try{if(isNil(numbers)){return;}const number=numbers.replace(/\\D/g,\"\");const getData=await api.get(\"/contacts/profile/\".concat(number));if(getData.data.contactId&&getData.data.contactId!==0){let obj={id:getData.data.contactId,name:contact,number:numbers,profilePicUrl:getData.data.urlPicture};setContact(obj);}else{let contactObj={name:contact,number:number,email:\"\",companyId:companyId};const{data}=await api.post(\"/contacts\",contactObj);setContact(data);}}catch(err){console.log(err);toastError(err);}};fetchContacts();},500);return()=>clearTimeout(delayDebounceFn);},[contact,numbers]);const handleCloseAlert=()=>{setOpenAlert(false);setOpenAlert(false);setUserTicketOpen(\"\");setQueueTicketOpen(\"\");};const handleNewChat=async()=>{try{const{data:ticket}=await api.post(\"/tickets\",{contactId:selectedContact.id,userId:user.id,status:\"open\",queueId,companyId:companyId,whatsappId});handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}catch(err){const ticket=JSON.parse(err.response.data.error);if(ticket.userId!==(user===null||user===void 0?void 0:user.id)){setOpenAlert(true);setUserTicketOpen(ticket.user.name);setQueueTicketOpen(ticket.queue.name);}else{setOpenAlert(false);setUserTicketOpen(\"\");setQueueTicketOpen(\"\");handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{minWidth:\"250px\"}},/*#__PURE__*/React.createElement(ShowTicketOpen,{isOpen:openAlert,handleClose:handleCloseAlert,user:userTicketOpen,queue:queueTicketOpen}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Avatar,{src:\"\".concat(selectedContact===null||selectedContact===void 0?void 0:selectedContact.urlPicture)})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:9},/*#__PURE__*/React.createElement(Typography,{style:{marginTop:\"12px\",marginLeft:\"10px\"},variant:\"subtitle1\",color:\"primary\",gutterBottom:true},selectedContact.name)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Button,{fullWidth:true,color:\"primary\",onClick:handleNewChat,disabled:!selectedContact.number},\"Conversar\")))));};export default VcardPreview;","map":null,"metadata":{},"sourceType":"module"}